[{"experiment": "classification_2", "max_runtime_secs": 3600, "max_models": null, "include_algos": null, "start_time": "2022-12-20 23:38:13.917469", "end_time": "2022-12-21 00:38:22.989225", "elapsed_time": "1:00:09.071756", "leaderboard": {"model_id": {"0": "StackedEnsemble_AllModels_3_AutoML_6_20221220_203815", "1": "StackedEnsemble_AllModels_2_AutoML_6_20221220_203815", "2": "StackedEnsemble_BestOfFamily_4_AutoML_6_20221220_203815", "3": "StackedEnsemble_AllModels_1_AutoML_6_20221220_203815", "4": "StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815", "5": "StackedEnsemble_BestOfFamily_3_AutoML_6_20221220_203815", "6": "StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815", "7": "XGBoost_2_AutoML_6_20221220_203815", "8": "GBM_1_AutoML_6_20221220_203815", "9": "XGBoost_1_AutoML_6_20221220_203815", "10": "GBM_grid_1_AutoML_6_20221220_203815_model_1", "11": "XGBoost_3_AutoML_6_20221220_203815", "12": "GBM_4_AutoML_6_20221220_203815", "13": "XGBoost_grid_1_AutoML_6_20221220_203815_model_1", "14": "GBM_3_AutoML_6_20221220_203815", "15": "GBM_2_AutoML_6_20221220_203815", "16": "GBM_5_AutoML_6_20221220_203815", "17": "DRF_1_AutoML_6_20221220_203815", "18": "XRT_1_AutoML_6_20221220_203815", "19": "GBM_grid_1_AutoML_6_20221220_203815_model_2", "20": "GBM_grid_1_AutoML_6_20221220_203815_model_3", "21": "XGBoost_grid_1_AutoML_6_20221220_203815_model_2", "22": "DeepLearning_grid_1_AutoML_6_20221220_203815_model_1", "23": "DeepLearning_grid_1_AutoML_6_20221220_203815_model_2", "24": "GLM_1_AutoML_6_20221220_203815", "25": "DeepLearning_1_AutoML_6_20221220_203815"}, "mean_per_class_error": {"0": 0.2114292799599224, "1": 0.2133041357204264, "2": 0.2135871901310641, "3": 0.2139227976262916, "4": 0.2162264937341117, "5": 0.2188620642168019, "6": 0.2243608939210426, "7": 0.2426462676125398, "8": 0.2438287231808095, "9": 0.2532986513059873, "10": 0.2593227967221188, "11": 0.2597054339103905, "12": 0.265816410068842, "13": 0.2666711782762891, "14": 0.2676554120620079, "15": 0.2731188795033211, "16": 0.294873646936856, "17": 0.2997825002043752, "18": 0.3023553809046003, "19": 0.3370660321580027, "20": 0.3705216955688737, "21": 0.3760550009610594, "22": 0.4777588259463342, "23": 0.5649851095215493, "24": 0.6099335309993034, "25": 0.6166740256425458}, "logloss": {"0": 0.4741350174599884, "1": 0.4760213268664071, "2": 0.4872655297789669, "3": 0.477571785321175, "4": 0.4902059190953927, "5": 0.4901649989803198, "6": 0.4990603584452752, "7": 0.5346815165784843, "8": 0.5320454368862744, "9": 0.5542597263716073, "10": 0.5679019558352165, "11": 0.5705193711448567, "12": 0.5714616212552799, "13": 0.5757362118556526, "14": 0.5726643370799616, "15": 0.5835787941720302, "16": 0.63306893317193, "17": 0.706514414312799, "18": 0.7186077781746245, "19": 0.7305889177150673, "20": 1.4735184982260212, "21": 0.962620211779461, "22": 2.773519845815188, "23": 1.2721383682458365, "24": 1.413825998552079, "25": 1.6184685933378682}, "rmse": {"0": 0.3878584574482805, "1": 0.387838505566311, "2": 0.3934019567962191, "3": 0.3887017796473193, "4": 0.3944886727266994, "5": 0.3942616157761099, "6": 0.398324152333821, "7": 0.4053917688936717, "8": 0.4102562577519962, "9": 0.4142059287983733, "10": 0.4253060778506962, "11": 0.4332571116652978, "12": 0.4292421544625601, "13": 0.4338271100300808, "14": 0.4318681420576923, "15": 0.4365516711060687, "16": 0.455559606277837, "17": 0.4891632803675424, "18": 0.4903163807770653, "19": 0.5019197925463211, "20": 0.7616715142014636, "21": 0.5893956492728414, "22": 0.5952706879767264, "23": 0.6364557086737946, "24": 0.6939556202588555, "25": 0.6950011962154731}, "mse": {"0": 0.1504341830141596, "1": 0.1504187063999094, "2": 0.1547650996110942, "3": 0.1510890735009932, "4": 0.155621312909673, "5": 0.1554422216743889, "6": 0.1586621303324571, "7": 0.1643424862867401, "8": 0.1683101970246724, "9": 0.1715665514517231, "10": 0.1808852598567425, "11": 0.1877117248085563, "12": 0.1842488271676603, "13": 0.1882059613970518, "14": 0.1865100921243631, "15": 0.1905773615455011, "16": 0.2075345548720178, "17": 0.2392807148599349, "18": 0.24041015325832, "19": 0.2519234781497421, "20": 0.5801434955459503, "21": 0.3473872313817542, "22": 0.3543471919642852, "23": 0.4050758691034622, "24": 0.4815744028888529, "25": 0.4830266627409385}}, "event_log": {"timestamp": {"0": "20:38:15.371", "1": "20:38:15.371", "2": "20:38:15.371", "3": "20:38:15.371", "4": "20:38:15.372", "5": "20:38:15.372", "6": "20:38:15.372", "7": "20:38:15.372", "8": "20:38:15.372", "9": "20:38:15.372", "10": "20:38:15.372", "11": "20:38:15.372", "12": "20:38:15.374", "13": "20:38:15.374", "14": "20:38:15.374", "15": "20:38:15.376", "16": "20:38:15.379", "17": "20:38:15.379", "18": "20:38:15.382", "19": "20:45:44.637", "20": "20:45:44.637", "21": "20:45:44.637", "22": "20:45:44.641", "23": "20:45:44.641", "24": "20:45:44.645", "25": "20:47:32.433", "26": "20:47:32.433", "27": "20:47:32.438", "28": "20:47:32.438", "29": "20:47:32.442", "30": "20:52:46.876", "31": "20:52:46.876", "32": "20:52:46.877", "33": "20:52:46.881", "34": "20:52:46.881", "35": "20:52:46.884", "36": "20:53:08.820", "37": "20:53:08.820", "38": "20:53:08.821", "39": "20:53:08.824", "40": "20:53:08.825", "41": "20:53:08.828", "42": "20:59:28.736", "43": "20:59:28.736", "44": "20:59:28.740", "45": "20:59:28.740", "46": "20:59:28.744", "47": "21:01:38.302", "48": "21:01:38.302", "49": "21:01:38.307", "50": "21:01:38.308", "51": "21:01:38.312", "52": "21:04:56.701", "53": "21:04:56.701", "54": "21:04:56.706", "55": "21:04:56.706", "56": "21:04:56.710", "57": "21:08:09.448", "58": "21:08:09.448", "59": "21:08:09.453", "60": "21:08:09.454", "61": "21:08:09.457", "62": "21:11:28.202", "63": "21:11:28.202", "64": "21:11:28.208", "65": "21:11:28.208", "66": "21:11:28.212", "67": "21:11:52.499", "68": "21:11:52.499", "69": "21:11:52.502", "70": "21:11:52.505", "71": "21:11:52.505", "72": "21:11:52.509", "73": "21:12:31.370", "74": "21:12:31.370", "75": "21:12:31.372", "76": "21:12:31.375", "77": "21:12:31.375", "78": "21:12:31.379", "79": "21:16:50.569", "80": "21:16:50.569", "81": "21:16:50.574", "82": "21:16:50.575", "83": "21:16:50.578", "84": "21:19:33.763", "85": "21:19:33.763", "86": "21:19:33.768", "87": "21:19:33.769", "88": "21:19:33.772", "89": "21:22:24.111", "90": "21:22:24.111", "91": "21:22:24.119", "92": "21:22:24.119", "93": "21:22:24.123", "94": "21:22:31.313", "95": "21:22:31.313", "96": "21:22:31.319", "97": "21:22:31.319", "98": "21:22:31.326", "99": "21:23:02.519", "100": "21:23:02.519", "101": "21:23:02.525", "102": "21:23:02.526", "103": "21:23:02.529", "104": "21:23:55.13", "105": "21:23:55.13", "106": "21:23:55.16", "107": "21:23:55.20", "108": "21:23:55.20", "109": "21:23:55.22", "110": "21:30:00.100", "111": "21:30:00.100", "112": "21:30:35.595", "113": "21:30:35.595", "114": "21:30:35.595", "115": "21:30:35.601", "116": "21:30:35.602", "117": "21:30:35.606", "118": "21:33:37.660", "119": "21:33:37.660", "120": "21:34:53.687", "121": "21:34:53.688", "122": "21:35:01.671", "123": "21:35:01.671", "124": "21:35:01.671", "125": "21:35:01.678", "126": "21:35:01.679", "127": "21:35:01.685", "128": "21:37:06.709", "129": "21:37:06.709", "130": "21:37:12.298", "131": "21:37:12.298", "132": "21:37:12.299", "133": "21:37:12.306", "134": "21:37:12.306", "135": "21:37:12.312", "136": "21:37:35.673", "137": "21:37:35.673", "138": "21:37:35.682", "139": "21:37:35.682", "140": "21:37:35.686", "141": "21:38:15.692", "142": "21:38:16.693", "143": "21:38:17.693", "144": "21:38:18.693", "145": "21:38:19.331", "146": "21:38:19.331", "147": "21:38:19.335", "148": "21:38:19.336", "149": "21:38:19.336", "150": "21:38:19.336", "151": "21:38:19.336", "152": "21:38:19.336", "153": "21:38:19.336", "154": "21:38:19.336", "155": "21:38:19.336", "156": "21:38:19.336", "157": "21:38:19.336", "158": "21:38:19.336", "159": "21:38:19.336", "160": "21:38:19.336", "161": "21:38:19.336", "162": "21:38:19.336", "163": "21:38:19.336", "164": "21:38:19.336", "165": "21:38:19.336", "166": "21:38:19.344", "167": "21:38:19.344"}, "level": {"0": "INFO", "1": "INFO", "2": "INFO", "3": "INFO", "4": "INFO", "5": "INFO", "6": "INFO", "7": "INFO", "8": "INFO", "9": "INFO", "10": "INFO", "11": "INFO", "12": "DEBUG", "13": "DEBUG", "14": "INFO", "15": "INFO", "16": "DEBUG", "17": "INFO", "18": "DEBUG", "19": "DEBUG", "20": "DEBUG", "21": "INFO", "22": "DEBUG", "23": "INFO", "24": "DEBUG", "25": "DEBUG", "26": "DEBUG", "27": "DEBUG", "28": "INFO", "29": "DEBUG", "30": "DEBUG", "31": "DEBUG", "32": "INFO", "33": "DEBUG", "34": "INFO", "35": "DEBUG", "36": "DEBUG", "37": "DEBUG", "38": "INFO", "39": "DEBUG", "40": "INFO", "41": "DEBUG", "42": "DEBUG", "43": "DEBUG", "44": "DEBUG", "45": "INFO", "46": "DEBUG", "47": "DEBUG", "48": "DEBUG", "49": "DEBUG", "50": "INFO", "51": "DEBUG", "52": "DEBUG", "53": "DEBUG", "54": "DEBUG", "55": "INFO", "56": "DEBUG", "57": "DEBUG", "58": "DEBUG", "59": "DEBUG", "60": "INFO", "61": "DEBUG", "62": "DEBUG", "63": "DEBUG", "64": "DEBUG", "65": "INFO", "66": "DEBUG", "67": "DEBUG", "68": "DEBUG", "69": "INFO", "70": "DEBUG", "71": "INFO", "72": "DEBUG", "73": "DEBUG", "74": "DEBUG", "75": "INFO", "76": "DEBUG", "77": "INFO", "78": "DEBUG", "79": "DEBUG", "80": "DEBUG", "81": "DEBUG", "82": "INFO", "83": "DEBUG", "84": "DEBUG", "85": "DEBUG", "86": "DEBUG", "87": "INFO", "88": "DEBUG", "89": "DEBUG", "90": "DEBUG", "91": "DEBUG", "92": "INFO", "93": "DEBUG", "94": "DEBUG", "95": "DEBUG", "96": "DEBUG", "97": "INFO", "98": "DEBUG", "99": "DEBUG", "100": "DEBUG", "101": "DEBUG", "102": "INFO", "103": "DEBUG", "104": "DEBUG", "105": "DEBUG", "106": "INFO", "107": "DEBUG", "108": "INFO", "109": "DEBUG", "110": "DEBUG", "111": "DEBUG", "112": "DEBUG", "113": "DEBUG", "114": "DEBUG", "115": "DEBUG", "116": "INFO", "117": "DEBUG", "118": "DEBUG", "119": "DEBUG", "120": "DEBUG", "121": "DEBUG", "122": "DEBUG", "123": "DEBUG", "124": "DEBUG", "125": "DEBUG", "126": "INFO", "127": "DEBUG", "128": "DEBUG", "129": "DEBUG", "130": "DEBUG", "131": "DEBUG", "132": "DEBUG", "133": "DEBUG", "134": "INFO", "135": "DEBUG", "136": "DEBUG", "137": "DEBUG", "138": "DEBUG", "139": "INFO", "140": "DEBUG", "141": "DEBUG", "142": "DEBUG", "143": "DEBUG", "144": "DEBUG", "145": "DEBUG", "146": "DEBUG", "147": "INFO", "148": "DEBUG", "149": "DEBUG", "150": "DEBUG", "151": "DEBUG", "152": "DEBUG", "153": "DEBUG", "154": "DEBUG", "155": "DEBUG", "156": "DEBUG", "157": "DEBUG", "158": "DEBUG", "159": "DEBUG", "160": "DEBUG", "161": "DEBUG", "162": "INFO", "163": "INFO", "164": "INFO", "165": "INFO", "166": "DEBUG", "167": "DEBUG"}, "stage": {"0": "Workflow", "1": "Validation", "2": "Validation", "3": "Validation", "4": "DataImport", "5": "DataImport", "6": "DataImport", "7": "DataImport", "8": "DataImport", "9": "DataImport", "10": "DataImport", "11": "Workflow", "12": "Workflow", "13": "Workflow", "14": "Workflow", "15": "Workflow", "16": "ModelTraining", "17": "ModelTraining", "18": "ModelTraining", "19": "ModelTraining", "20": "ModelTraining", "21": "ModelTraining", "22": "ModelTraining", "23": "ModelTraining", "24": "ModelTraining", "25": "ModelTraining", "26": "ModelTraining", "27": "ModelTraining", "28": "ModelTraining", "29": "ModelTraining", "30": "ModelTraining", "31": "ModelTraining", "32": "ModelTraining", "33": "ModelTraining", "34": "ModelTraining", "35": "ModelTraining", "36": "ModelTraining", "37": "ModelTraining", "38": "ModelTraining", "39": "ModelTraining", "40": "ModelTraining", "41": "ModelTraining", "42": "ModelTraining", "43": "ModelTraining", "44": "ModelTraining", "45": "ModelTraining", "46": "ModelTraining", "47": "ModelTraining", "48": "ModelTraining", "49": "ModelTraining", "50": "ModelTraining", "51": "ModelTraining", "52": "ModelTraining", "53": "ModelTraining", "54": "ModelTraining", "55": "ModelTraining", "56": "ModelTraining", "57": "ModelTraining", "58": "ModelTraining", "59": "ModelTraining", "60": "ModelTraining", "61": "ModelTraining", "62": "ModelTraining", "63": "ModelTraining", "64": "ModelTraining", "65": "ModelTraining", "66": "ModelTraining", "67": "ModelTraining", "68": "ModelTraining", "69": "ModelTraining", "70": "ModelTraining", "71": "ModelTraining", "72": "ModelTraining", "73": "ModelTraining", "74": "ModelTraining", "75": "ModelTraining", "76": "ModelTraining", "77": "ModelTraining", "78": "ModelTraining", "79": "ModelTraining", "80": "ModelTraining", "81": "ModelTraining", "82": "ModelTraining", "83": "ModelTraining", "84": "ModelTraining", "85": "ModelTraining", "86": "ModelTraining", "87": "ModelTraining", "88": "ModelTraining", "89": "ModelTraining", "90": "ModelTraining", "91": "ModelTraining", "92": "ModelTraining", "93": "ModelTraining", "94": "ModelTraining", "95": "ModelTraining", "96": "ModelTraining", "97": "ModelTraining", "98": "ModelTraining", "99": "ModelTraining", "100": "ModelTraining", "101": "ModelTraining", "102": "ModelTraining", "103": "ModelTraining", "104": "ModelTraining", "105": "ModelTraining", "106": "ModelTraining", "107": "ModelTraining", "108": "ModelTraining", "109": "ModelTraining", "110": "ModelTraining", "111": "ModelTraining", "112": "ModelTraining", "113": "ModelTraining", "114": "ModelTraining", "115": "ModelTraining", "116": "ModelTraining", "117": "ModelTraining", "118": "ModelTraining", "119": "ModelTraining", "120": "ModelTraining", "121": "ModelTraining", "122": "ModelTraining", "123": "ModelTraining", "124": "ModelTraining", "125": "ModelTraining", "126": "ModelTraining", "127": "ModelTraining", "128": "ModelTraining", "129": "ModelTraining", "130": "ModelTraining", "131": "ModelTraining", "132": "ModelTraining", "133": "ModelTraining", "134": "ModelTraining", "135": "ModelTraining", "136": "ModelTraining", "137": "ModelTraining", "138": "ModelTraining", "139": "ModelTraining", "140": "ModelTraining", "141": "ModelTraining", "142": "ModelTraining", "143": "ModelTraining", "144": "ModelTraining", "145": "ModelTraining", "146": "ModelTraining", "147": "ModelTraining", "148": "ModelTraining", "149": "ModelTraining", "150": "ModelTraining", "151": "ModelTraining", "152": "ModelTraining", "153": "ModelTraining", "154": "ModelTraining", "155": "ModelTraining", "156": "ModelTraining", "157": "ModelTraining", "158": "ModelTraining", "159": "ModelTraining", "160": "ModelTraining", "161": "ModelTraining", "162": "Workflow", "163": "Workflow", "164": "Workflow", "165": "Workflow", "166": "Workflow", "167": "Workflow"}, "message": {"0": "Project: classification_test_2022-12-20T23.38.13", "1": "5-fold cross-validation will be used.", "2": "Setting stopping tolerance adaptively based on the training frame: 0.010584529526266352", "3": "Build control seed: -1 (random)", "4": "training frame: Frame key: AutoML_6_20221220_203815_training_Key_Frame__upload_9909aa77d6be93b1878a278354344d2f.hex    cols: 97    rows: 8926  chunks: 3    size: 6885586  checksum: 8529941583738656508", "5": "validation frame: NULL", "6": "leaderboard frame: NULL", "7": "blending frame: NULL", "8": "response column: target", "9": "fold column: null", "10": "weights column: null", "11": "Loading execution steps: [{XGBoost : [def_2 (1g, 10w), def_1 (2g, 10w), def_3 (3g, 10w), grid_1 (4g, 90w), lr_search (6g, 30w)]}, {GLM : [def_1 (1g, 10w)]}, {DRF : [def_1 (2g, 10w), XRT (3g, 10w)]}, {GBM : [def_5 (1g, 10w), def_2 (2g, 10w), def_3 (2g, 10w), def_4 (2g, 10w), def_1 (3g, 10w), grid_1 (4g, 60w), lr_annealing (6g, 10w)]}, {DeepLearning : [def_1 (3g, 10w), grid_1 (4g, 30w), grid_2 (5g, 30w), grid_3 (5g, 30w)]}, {completion : [resume_best_grids (10g, 60w)]}, {StackedEnsemble : [best_of_family_1 (1g, 5w), best_of_family_2 (2g, 5w), best_of_family_3 (3g, 5w), best_of_family_4 (4g, 5w), best_of_family_5 (5g, 5w), all_2 (2g, 10w), all_3 (3g, 10w), all_4 (4g, 10w), all_5 (5g, 10w), monotonic (6g, 10w), best_of_family_gbm (6g, 10w), all_gbm (7g, 10w), best_of_family_xglm (8g, 10w), all_xglm (8g, 10w), best_of_family (10g, 10w), best_N (10g, 10w)]}]", "12": "Defined work allocations: [Work{def_2, XGBoost, ModelBuild, group=1, weight=10}, Work{def_1, GLM, ModelBuild, group=1, weight=10}, Work{def_5, GBM, ModelBuild, group=1, weight=10}, Work{best_of_family_1, StackedEnsemble, ModelBuild, group=1, weight=5}, Work{def_1, XGBoost, ModelBuild, group=2, weight=10}, Work{def_1, DRF, ModelBuild, group=2, weight=10}, Work{def_2, GBM, ModelBuild, group=2, weight=10}, Work{def_3, GBM, ModelBuild, group=2, weight=10}, Work{def_4, GBM, ModelBuild, group=2, weight=10}, Work{best_of_family_2, StackedEnsemble, ModelBuild, group=2, weight=5}, Work{all_2, StackedEnsemble, ModelBuild, group=2, weight=10}, Work{def_3, XGBoost, ModelBuild, group=3, weight=10}, Work{XRT, DRF, ModelBuild, group=3, weight=10}, Work{def_1, GBM, ModelBuild, group=3, weight=10}, Work{def_1, DeepLearning, ModelBuild, group=3, weight=10}, Work{best_of_family_3, StackedEnsemble, ModelBuild, group=3, weight=5}, Work{all_3, StackedEnsemble, ModelBuild, group=3, weight=10}, Work{grid_1, XGBoost, HyperparamSearch, group=4, weight=90}, Work{grid_1, GBM, HyperparamSearch, group=4, weight=60}, Work{grid_1, DeepLearning, HyperparamSearch, group=4, weight=30}, Work{best_of_family_4, StackedEnsemble, ModelBuild, group=4, weight=5}, Work{all_4, StackedEnsemble, ModelBuild, group=4, weight=10}, Work{grid_2, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{grid_3, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{best_of_family_5, StackedEnsemble, ModelBuild, group=5, weight=5}, Work{all_5, StackedEnsemble, ModelBuild, group=5, weight=10}, Work{lr_search, XGBoost, Selection, group=6, weight=30}, Work{lr_annealing, GBM, Selection, group=6, weight=10}, Work{monotonic, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{best_of_family_gbm, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{all_gbm, StackedEnsemble, ModelBuild, group=7, weight=10}, Work{best_of_family_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{all_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{resume_best_grids, virtual, Dynamic, group=10, weight=60}, Work{best_of_family, StackedEnsemble, ModelBuild, group=10, weight=10}, Work{best_N, StackedEnsemble, ModelBuild, group=10, weight=10}]", "13": "Actual work allocations: [Work{def_2, XGBoost, ModelBuild, group=1, weight=10}, Work{def_1, GLM, ModelBuild, group=1, weight=10}, Work{def_5, GBM, ModelBuild, group=1, weight=10}, Work{best_of_family_1, StackedEnsemble, ModelBuild, group=1, weight=5}, Work{def_1, XGBoost, ModelBuild, group=2, weight=10}, Work{def_1, DRF, ModelBuild, group=2, weight=10}, Work{def_2, GBM, ModelBuild, group=2, weight=10}, Work{def_3, GBM, ModelBuild, group=2, weight=10}, Work{def_4, GBM, ModelBuild, group=2, weight=10}, Work{best_of_family_2, StackedEnsemble, ModelBuild, group=2, weight=5}, Work{all_2, StackedEnsemble, ModelBuild, group=2, weight=10}, Work{def_3, XGBoost, ModelBuild, group=3, weight=10}, Work{XRT, DRF, ModelBuild, group=3, weight=10}, Work{def_1, GBM, ModelBuild, group=3, weight=10}, Work{def_1, DeepLearning, ModelBuild, group=3, weight=10}, Work{best_of_family_3, StackedEnsemble, ModelBuild, group=3, weight=5}, Work{all_3, StackedEnsemble, ModelBuild, group=3, weight=10}, Work{grid_1, XGBoost, HyperparamSearch, group=4, weight=90}, Work{grid_1, GBM, HyperparamSearch, group=4, weight=60}, Work{grid_1, DeepLearning, HyperparamSearch, group=4, weight=30}, Work{best_of_family_4, StackedEnsemble, ModelBuild, group=4, weight=5}, Work{all_4, StackedEnsemble, ModelBuild, group=4, weight=10}, Work{grid_2, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{grid_3, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{best_of_family_5, StackedEnsemble, ModelBuild, group=5, weight=5}, Work{all_5, StackedEnsemble, ModelBuild, group=5, weight=10}, Work{lr_search, XGBoost, Selection, group=6, weight=30}, Work{lr_annealing, GBM, Selection, group=6, weight=10}, Work{monotonic, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{best_of_family_gbm, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{all_gbm, StackedEnsemble, ModelBuild, group=7, weight=10}, Work{best_of_family_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{all_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{resume_best_grids, virtual, Dynamic, group=10, weight=60}, Work{best_of_family, StackedEnsemble, ModelBuild, group=10, weight=10}, Work{best_N, StackedEnsemble, ModelBuild, group=10, weight=10}]", "14": "AutoML job created: 2022.12.20 20:38:15.370", "15": "AutoML build started: 2022.12.20 20:38:15.376", "16": "Time assigned for XGBoost_1_AutoML_6_20221220_203815: 1028.570625s", "17": "AutoML: starting XGBoost_1_AutoML_6_20221220_203815 model training", "18": "XGBoost_1_AutoML_6_20221220_203815 [XGBoost def_2] started", "19": "XGBoost_1_AutoML_6_20221220_203815 [XGBoost def_2] complete", "20": "Adding model XGBoost_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=112s, total=449s", "21": "New leader: XGBoost_1_AutoML_6_20221220_203815, mean_per_class_error: 0.2532986513059873", "22": "Time assigned for GLM_1_AutoML_6_20221220_203815: 1260.294s", "23": "AutoML: starting GLM_1_AutoML_6_20221220_203815 model training", "24": "GLM_1_AutoML_6_20221220_203815 [GLM def_1] started", "25": "GLM_1_AutoML_6_20221220_203815 [GLM def_1] complete", "26": "Adding model GLM_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=13s, total=108s", "27": "Time assigned for GBM_1_AutoML_6_20221220_203815: 2028.625375s", "28": "AutoML: starting GBM_1_AutoML_6_20221220_203815 model training", "29": "GBM_1_AutoML_6_20221220_203815 [GBM def_5] started", "30": "GBM_1_AutoML_6_20221220_203815 [GBM def_5] complete", "31": "Adding model GBM_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=52s, total=314s", "32": "New leader: GBM_1_AutoML_6_20221220_203815, mean_per_class_error: 0.24382872318080956", "33": "Time assigned for StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815: 2728.495s", "34": "AutoML: starting StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815 model training", "35": "StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_1 (built with AUTO metalearner, using top model from each algorithm type)] started", "36": "StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_1 (built with AUTO metalearner, using top model from each algorithm type)] complete", "37": "Adding model StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=22s, total=22s", "38": "New leader: StackedEnsemble_BestOfFamily_1_AutoML_6_20221220_203815, mean_per_class_error: 0.22436089392104264", "39": "Time assigned for XGBoost_2_AutoML_6_20221220_203815: 416.392625s", "40": "AutoML: starting XGBoost_2_AutoML_6_20221220_203815 model training", "41": "XGBoost_2_AutoML_6_20221220_203815 [XGBoost def_1] started", "42": "XGBoost_2_AutoML_6_20221220_203815 [XGBoost def_1] complete", "43": "Adding model XGBoost_2_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=66s, total=380s", "44": "Time assigned for DRF_1_AutoML_6_20221220_203815: 423.02475s", "45": "AutoML: starting DRF_1_AutoML_6_20221220_203815 model training", "46": "DRF_1_AutoML_6_20221220_203815 [DRF def_1] started", "47": "DRF_1_AutoML_6_20221220_203815 [DRF def_1] complete", "48": "Adding model DRF_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=21s, total=130s", "49": "Time assigned for GBM_2_AutoML_6_20221220_203815: 488.2375625s", "50": "AutoML: starting GBM_2_AutoML_6_20221220_203815 model training", "51": "GBM_2_AutoML_6_20221220_203815 [GBM def_2] started", "52": "GBM_2_AutoML_6_20221220_203815 [GBM def_2] complete", "53": "Adding model GBM_2_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=33s, total=198s", "54": "Time assigned for GBM_3_AutoML_6_20221220_203815: 571.048625s", "55": "AutoML: starting GBM_3_AutoML_6_20221220_203815 model training", "56": "GBM_3_AutoML_6_20221220_203815 [GBM def_3] started", "57": "GBM_3_AutoML_6_20221220_203815 [GBM def_3] complete", "58": "Adding model GBM_3_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=31s, total=193s", "59": "Time assigned for GBM_4_AutoML_6_20221220_203815: 722.3691875s", "60": "AutoML: starting GBM_4_AutoML_6_20221220_203815 model training", "61": "GBM_4_AutoML_6_20221220_203815 [GBM def_4] started", "62": "GBM_4_AutoML_6_20221220_203815 [GBM def_4] complete", "63": "Adding model GBM_4_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=32s, total=199s", "64": "Time assigned for StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815: 535.7226875s", "65": "AutoML: starting StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815 model training", "66": "StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_2 (built with AUTO metalearner, using top model from each algorithm type)] started", "67": "StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_2 (built with AUTO metalearner, using top model from each algorithm type)] complete", "68": "Adding model StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=24s, total=24s", "69": "New leader: StackedEnsemble_BestOfFamily_2_AutoML_6_20221220_203815, mean_per_class_error: 0.21622649373411176", "70": "Time assigned for StackedEnsemble_AllModels_1_AutoML_6_20221220_203815: 1582.871s", "71": "AutoML: starting StackedEnsemble_AllModels_1_AutoML_6_20221220_203815 model training", "72": "StackedEnsemble_AllModels_1_AutoML_6_20221220_203815 [StackedEnsemble all_2 (built with AUTO metalearner, using all AutoML models)] started", "73": "StackedEnsemble_AllModels_1_AutoML_6_20221220_203815 [StackedEnsemble all_2 (built with AUTO metalearner, using all AutoML models)] complete", "74": "Adding model StackedEnsemble_AllModels_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=39s, total=39s", "75": "New leader: StackedEnsemble_AllModels_1_AutoML_6_20221220_203815, mean_per_class_error: 0.21392279762629163", "76": "Time assigned for XGBoost_3_AutoML_6_20221220_203815: 280.72746875s", "77": "AutoML: starting XGBoost_3_AutoML_6_20221220_203815 model training", "78": "XGBoost_3_AutoML_6_20221220_203815 [XGBoost def_3] started", "79": "XGBoost_3_AutoML_6_20221220_203815 [XGBoost def_3] complete", "80": "Adding model XGBoost_3_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=45s, total=259s", "81": "Time assigned for XRT_1_AutoML_6_20221220_203815: 285.5115625s", "82": "AutoML: starting XRT_1_AutoML_6_20221220_203815 model training", "83": "XRT_1_AutoML_6_20221220_203815 [DRF XRT (Extremely Randomized Trees)] started", "84": "XRT_1_AutoML_6_20221220_203815 [DRF XRT (Extremely Randomized Trees)] complete", "85": "Adding model XRT_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=24s, total=163s", "86": "Time assigned for GBM_5_AutoML_6_20221220_203815: 320.4594375s", "87": "AutoML: starting GBM_5_AutoML_6_20221220_203815 model training", "88": "GBM_5_AutoML_6_20221220_203815 [GBM def_1] started", "89": "GBM_5_AutoML_6_20221220_203815 [GBM def_1] complete", "90": "Adding model GBM_5_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=27s, total=170s", "91": "Time assigned for DeepLearning_1_AutoML_6_20221220_203815: 380.5028125s", "92": "AutoML: starting DeepLearning_1_AutoML_6_20221220_203815 model training", "93": "DeepLearning_1_AutoML_6_20221220_203815 [DeepLearning def_1] started", "94": "DeepLearning_1_AutoML_6_20221220_203815 [DeepLearning def_1] complete", "95": "Adding model DeepLearning_1_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=1s, total=7s", "96": "Time assigned for StackedEnsemble_BestOfFamily_3_AutoML_6_20221220_203815: 314.6856875s", "97": "AutoML: starting StackedEnsemble_BestOfFamily_3_AutoML_6_20221220_203815 model training", "98": "StackedEnsemble_BestOfFamily_3_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_3 (built with AUTO metalearner, using top model from each algorithm type)] started", "99": "StackedEnsemble_BestOfFamily_3_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_3 (built with AUTO metalearner, using top model from each algorithm type)] complete", "100": "Adding model StackedEnsemble_BestOfFamily_3_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=31s, total=31s", "101": "Time assigned for StackedEnsemble_AllModels_2_AutoML_6_20221220_203815: 912.851s", "102": "AutoML: starting StackedEnsemble_AllModels_2_AutoML_6_20221220_203815 model training", "103": "StackedEnsemble_AllModels_2_AutoML_6_20221220_203815 [StackedEnsemble all_3 (built with AUTO metalearner, using all AutoML models)] started", "104": "StackedEnsemble_AllModels_2_AutoML_6_20221220_203815 [StackedEnsemble all_3 (built with AUTO metalearner, using all AutoML models)] complete", "105": "Adding model StackedEnsemble_AllModels_2_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=52s, total=52s", "106": "New leader: StackedEnsemble_AllModels_2_AutoML_6_20221220_203815, mean_per_class_error: 0.21330413572042645", "107": "Time assigned for XGBoost_grid_1_AutoML_6_20221220_203815: 397.08784375s", "108": "AutoML: starting XGBoost_grid_1_AutoML_6_20221220_203815 hyperparameter search", "109": "XGBoost_grid_1_AutoML_6_20221220_203815 [XGBoost Grid Search] started", "110": "Built: 1 models for HyperparamSearch : XGBoost_grid_1_AutoML_6_20221220_203815 [XGBoost Grid Search]", "111": "Adding model XGBoost_grid_1_AutoML_6_20221220_203815_model_1 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=62s, total=364s", "112": "XGBoost_grid_1_AutoML_6_20221220_203815 [XGBoost Grid Search] complete", "113": "Built: 2 models for HyperparamSearch : XGBoost_grid_1_AutoML_6_20221220_203815 [XGBoost Grid Search]", "114": "Adding model XGBoost_grid_1_AutoML_6_20221220_203815_model_2 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=7s, total=36s", "115": "Time assigned for GBM_grid_1_AutoML_6_20221220_203815: 262.72859375s", "116": "AutoML: starting GBM_grid_1_AutoML_6_20221220_203815 hyperparameter search", "117": "GBM_grid_1_AutoML_6_20221220_203815 [GBM Grid Search] started", "118": "Built: 1 models for HyperparamSearch : GBM_grid_1_AutoML_6_20221220_203815 [GBM Grid Search]", "119": "Adding model GBM_grid_1_AutoML_6_20221220_203815_model_1 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=18s, total=181s", "120": "Built: 2 models for HyperparamSearch : GBM_grid_1_AutoML_6_20221220_203815 [GBM Grid Search]", "121": "Adding model GBM_grid_1_AutoML_6_20221220_203815_model_2 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=6s, total=77s", "122": "GBM_grid_1_AutoML_6_20221220_203815 [GBM Grid Search] complete", "123": "Built: 3 models for HyperparamSearch : GBM_grid_1_AutoML_6_20221220_203815 [GBM Grid Search]", "124": "Adding model GBM_grid_1_AutoML_6_20221220_203815_model_3 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=1s, total=8s", "125": "Time assigned for DeepLearning_grid_1_AutoML_6_20221220_203815: 129.132s", "126": "AutoML: starting DeepLearning_grid_1_AutoML_6_20221220_203815 hyperparameter search", "127": "DeepLearning_grid_1_AutoML_6_20221220_203815 [DeepLearning Grid Search] started", "128": "Built: 1 models for HyperparamSearch : DeepLearning_grid_1_AutoML_6_20221220_203815 [DeepLearning Grid Search]", "129": "Adding model DeepLearning_grid_1_AutoML_6_20221220_203815_model_1 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=9s, total=125s", "130": "DeepLearning_grid_1_AutoML_6_20221220_203815 [DeepLearning Grid Search] complete", "131": "Built: 2 models for HyperparamSearch : DeepLearning_grid_1_AutoML_6_20221220_203815 [DeepLearning Grid Search]", "132": "Adding model DeepLearning_grid_1_AutoML_6_20221220_203815_model_2 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=0s, total=6s", "133": "Time assigned for StackedEnsemble_BestOfFamily_4_AutoML_6_20221220_203815: 21.023333984375s", "134": "AutoML: starting StackedEnsemble_BestOfFamily_4_AutoML_6_20221220_203815 model training", "135": "StackedEnsemble_BestOfFamily_4_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_4 (built with AUTO metalearner, using top model from each algorithm type)] started", "136": "StackedEnsemble_BestOfFamily_4_AutoML_6_20221220_203815 [StackedEnsemble best_of_family_4 (built with AUTO metalearner, using top model from each algorithm type)] complete", "137": "Adding model StackedEnsemble_BestOfFamily_4_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=23s, total=23s", "138": "Time assigned for StackedEnsemble_AllModels_3_AutoML_6_20221220_203815: 39.694s", "139": "AutoML: starting StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 model training", "140": "StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 [StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)] started", "141": "AutoML: out of time; skipping StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 [StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)]", "142": "AutoML: out of time; skipping StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 [StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)]", "143": "AutoML: out of time; skipping StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 [StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)]", "144": "AutoML: out of time; skipping StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 [StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)]", "145": "StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 [StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)] complete", "146": "Adding model StackedEnsemble_AllModels_3_AutoML_6_20221220_203815 to leaderboard Leaderboard_classification_test_2022-12-20T23.38.13@@target. Training time: model=44s, total=44s", "147": "New leader: StackedEnsemble_AllModels_3_AutoML_6_20221220_203815, mean_per_class_error: 0.21142927995992242", "148": "AutoML: out of time; skipping DeepLearning grid_2", "149": "AutoML: out of time; skipping DeepLearning grid_3", "150": "AutoML: out of time; skipping StackedEnsemble best_of_family_5 (built with AUTO metalearner, using top model from each algorithm type)", "151": "AutoML: out of time; skipping StackedEnsemble all_5 (built with AUTO metalearner, using all AutoML models)", "152": "AutoML: out of time; skipping XGBoost lr_search", "153": "AutoML: out of time; skipping GBM lr_annealing", "154": "AutoML: out of time; skipping StackedEnsemble monotonic (built with AUTO metalearner, using monotonically constrained AutoML models)", "155": "AutoML: out of time; skipping StackedEnsemble best_of_family_gbm (built with gbm metalearner, using top model from each algorithm type)", "156": "AutoML: out of time; skipping StackedEnsemble all_gbm (built with gbm metalearner, using all AutoML models)", "157": "AutoML: out of time; skipping StackedEnsemble best_of_family_xglm (built with AUTO metalearner, using top model from each algorithm type)", "158": "AutoML: out of time; skipping StackedEnsemble all_xglm (built with AUTO metalearner, using all AutoML models)", "159": "AutoML: out of time; skipping completion resume_best_grids", "160": "AutoML: out of time; skipping StackedEnsemble best_of_family (built with AUTO metalearner, using top model from each algorithm type)", "161": "AutoML: out of time; skipping StackedEnsemble best_N (built with AUTO metalearner, using best 166 non-SE models)", "162": "Actual modeling steps: [{XGBoost : [def_2 (1g, 10w)]}, {GLM : [def_1 (1g, 10w)]}, {GBM : [def_5 (1g, 10w)]}, {StackedEnsemble : [best_of_family_1 (1g, 5w)]}, {XGBoost : [def_1 (2g, 10w)]}, {DRF : [def_1 (2g, 10w)]}, {GBM : [def_2 (2g, 10w), def_3 (2g, 10w), def_4 (2g, 10w)]}, {StackedEnsemble : [best_of_family_2 (2g, 5w), all_2 (2g, 10w)]}, {XGBoost : [def_3 (3g, 10w)]}, {DRF : [XRT (3g, 10w)]}, {GBM : [def_1 (3g, 10w)]}, {DeepLearning : [def_1 (3g, 10w)]}, {StackedEnsemble : [best_of_family_3 (3g, 5w), all_3 (3g, 10w)]}, {XGBoost : [grid_1 (4g, 90w)]}, {GBM : [grid_1 (4g, 60w)]}, {DeepLearning : [grid_1 (4g, 30w)]}, {StackedEnsemble : [best_of_family_4 (4g, 5w), all_4 (4g, 10w)]}]", "163": "AutoML build stopped: 2022.12.20 21:38:19.336", "164": "AutoML build done: built 19 models", "165": "AutoML duration:  1:00:03.960", "166": "Verifying training frame immutability. . .", "167": "Training frame was not mutated (as expected)."}, "name": {"0": NaN, "1": NaN, "2": NaN, "3": NaN, "4": NaN, "5": NaN, "6": NaN, "7": NaN, "8": NaN, "9": NaN, "10": NaN, "11": NaN, "12": NaN, "13": NaN, "14": "creation_epoch", "15": "start_epoch", "16": NaN, "17": "start_XGBoost_def_2", "18": NaN, "19": NaN, "20": NaN, "21": NaN, "22": NaN, "23": "start_GLM_def_1", "24": NaN, "25": NaN, "26": NaN, "27": NaN, "28": "start_GBM_def_5", "29": NaN, "30": NaN, "31": NaN, "32": NaN, "33": NaN, "34": "start_StackedEnsemble_best_of_family_1", "35": NaN, "36": NaN, "37": NaN, "38": NaN, "39": NaN, "40": "start_XGBoost_def_1", "41": NaN, "42": NaN, "43": NaN, "44": NaN, "45": "start_DRF_def_1", "46": NaN, "47": NaN, "48": NaN, "49": NaN, "50": "start_GBM_def_2", "51": NaN, "52": NaN, "53": NaN, "54": NaN, "55": "start_GBM_def_3", "56": NaN, "57": NaN, "58": NaN, "59": NaN, "60": "start_GBM_def_4", "61": NaN, "62": NaN, "63": NaN, "64": NaN, "65": "start_StackedEnsemble_best_of_family_2", "66": NaN, "67": NaN, "68": NaN, "69": NaN, "70": NaN, "71": "start_StackedEnsemble_all_2", "72": NaN, "73": NaN, "74": NaN, "75": NaN, "76": NaN, "77": "start_XGBoost_def_3", "78": NaN, "79": NaN, "80": NaN, "81": NaN, "82": "start_DRF_XRT", "83": NaN, "84": NaN, "85": NaN, "86": NaN, "87": "start_GBM_def_1", "88": NaN, "89": NaN, "90": NaN, "91": NaN, "92": "start_DeepLearning_def_1", "93": NaN, "94": NaN, "95": NaN, "96": NaN, "97": "start_StackedEnsemble_best_of_family_3", "98": NaN, "99": NaN, "100": NaN, "101": NaN, "102": "start_StackedEnsemble_all_3", "103": NaN, "104": NaN, "105": NaN, "106": NaN, "107": NaN, "108": "start_XGBoost_grid_1", "109": NaN, "110": NaN, "111": NaN, "112": NaN, "113": NaN, "114": NaN, "115": NaN, "116": "start_GBM_grid_1", "117": NaN, "118": NaN, "119": NaN, "120": NaN, "121": NaN, "122": NaN, "123": NaN, "124": NaN, "125": NaN, "126": "start_DeepLearning_grid_1", "127": NaN, "128": NaN, "129": NaN, "130": NaN, "131": NaN, "132": NaN, "133": NaN, "134": "start_StackedEnsemble_best_of_family_4", "135": NaN, "136": NaN, "137": NaN, "138": NaN, "139": "start_StackedEnsemble_all_4", "140": NaN, "141": NaN, "142": NaN, "143": NaN, "144": NaN, "145": NaN, "146": NaN, "147": NaN, "148": NaN, "149": NaN, "150": NaN, "151": NaN, "152": NaN, "153": NaN, "154": NaN, "155": NaN, "156": NaN, "157": NaN, "158": NaN, "159": NaN, "160": NaN, "161": NaN, "162": NaN, "163": "stop_epoch", "164": NaN, "165": "duration_secs", "166": NaN, "167": NaN}, "value": {"0": NaN, "1": NaN, "2": NaN, "3": NaN, "4": NaN, "5": NaN, "6": NaN, "7": NaN, "8": NaN, "9": NaN, "10": NaN, "11": NaN, "12": NaN, "13": NaN, "14": 1671568695.0, "15": 1671568695.0, "16": NaN, "17": 1671568695.0, "18": NaN, "19": NaN, "20": NaN, "21": NaN, "22": NaN, "23": 1671569145.0, "24": NaN, "25": NaN, "26": NaN, "27": NaN, "28": 1671569252.0, "29": NaN, "30": NaN, "31": NaN, "32": NaN, "33": NaN, "34": 1671569567.0, "35": NaN, "36": NaN, "37": NaN, "38": NaN, "39": NaN, "40": 1671569589.0, "41": NaN, "42": NaN, "43": NaN, "44": NaN, "45": 1671569969.0, "46": NaN, "47": NaN, "48": NaN, "49": NaN, "50": 1671570098.0, "51": NaN, "52": NaN, "53": NaN, "54": NaN, "55": 1671570297.0, "56": NaN, "57": NaN, "58": NaN, "59": NaN, "60": 1671570489.0, "61": NaN, "62": NaN, "63": NaN, "64": NaN, "65": 1671570688.0, "66": NaN, "67": NaN, "68": NaN, "69": NaN, "70": NaN, "71": 1671570713.0, "72": NaN, "73": NaN, "74": NaN, "75": NaN, "76": NaN, "77": 1671570751.0, "78": NaN, "79": NaN, "80": NaN, "81": NaN, "82": 1671571011.0, "83": NaN, "84": NaN, "85": NaN, "86": NaN, "87": 1671571174.0, "88": NaN, "89": NaN, "90": NaN, "91": NaN, "92": 1671571344.0, "93": NaN, "94": NaN, "95": NaN, "96": NaN, "97": 1671571351.0, "98": NaN, "99": NaN, "100": NaN, "101": NaN, "102": 1671571383.0, "103": NaN, "104": NaN, "105": NaN, "106": NaN, "107": NaN, "108": 1671571435.0, "109": NaN, "110": NaN, "111": NaN, "112": NaN, "113": NaN, "114": NaN, "115": NaN, "116": 1671571836.0, "117": NaN, "118": NaN, "119": NaN, "120": NaN, "121": NaN, "122": NaN, "123": NaN, "124": NaN, "125": NaN, "126": 1671572102.0, "127": NaN, "128": NaN, "129": NaN, "130": NaN, "131": NaN, "132": NaN, "133": NaN, "134": 1671572232.0, "135": NaN, "136": NaN, "137": NaN, "138": NaN, "139": 1671572256.0, "140": NaN, "141": NaN, "142": NaN, "143": NaN, "144": NaN, "145": NaN, "146": NaN, "147": NaN, "148": NaN, "149": NaN, "150": NaN, "151": NaN, "152": NaN, "153": NaN, "154": NaN, "155": NaN, "156": NaN, "157": NaN, "158": NaN, "159": NaN, "160": NaN, "161": NaN, "162": NaN, "163": 1671572299.0, "164": NaN, "165": 3604.0, "166": NaN, "167": NaN}}}]