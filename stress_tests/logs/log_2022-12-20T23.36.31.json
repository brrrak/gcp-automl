[{"experiment": "classification_2", "max_runtime_secs": 10, "max_models": null, "include_algos": null, "start_time": "2022-12-20 23:36:45.474252", "end_time": "2022-12-20 23:37:01.291067", "elapsed_time": "0:00:15.816815", "leaderboard": {"model_id": {"0": "XGBoost_1_AutoML_5_20221220_203647", "1": "GBM_1_AutoML_5_20221220_203647", "2": "StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647", "3": "GLM_1_AutoML_5_20221220_203647"}, "mean_per_class_error": {"0": 0.4308384140052723, "1": 0.4397622952883085, "2": 0.7311013516999433, "3": 0.7568538101737297}, "logloss": {"0": 1.3417839564076504, "1": 1.1740491337837555, "2": 1.5788718479691182, "3": 1.690823491436288}, "rmse": {"0": 0.7207906824884901, "1": 0.6664059568106194, "2": 0.7618806555648698, "3": 0.7879640157420692}, "mse": {"0": 0.5195392079622233, "1": 0.4440968992726772, "2": 0.5804621333239559, "3": 0.6208872901043678}}, "event_log": {"timestamp": {"0": "20:36:47.43", "1": "20:36:47.43", "2": "20:36:47.43", "3": "20:36:47.43", "4": "20:36:47.43", "5": "20:36:47.98", "6": "20:36:47.108", "7": "20:36:47.108", "8": "20:36:47.122", "9": "20:36:47.122", "10": "20:36:47.122", "11": "20:36:47.122", "12": "20:36:47.123", "13": "20:36:47.124", "14": "20:36:47.124", "15": "20:36:47.124", "16": "20:36:47.126", "17": "20:36:47.129", "18": "20:36:47.129", "19": "20:36:47.133", "20": "20:36:50.678", "21": "20:36:50.678", "22": "20:36:50.686", "23": "20:36:50.690", "24": "20:36:50.690", "25": "20:36:50.693", "26": "20:36:53.627", "27": "20:36:53.627", "28": "20:36:53.636", "29": "20:36:53.636", "30": "20:36:53.639", "31": "20:36:56.276", "32": "20:36:56.276", "33": "20:36:56.286", "34": "20:36:56.287", "35": "20:36:56.290", "36": "20:36:57.291", "37": "20:36:57.880", "38": "20:36:57.880", "39": "20:36:57.975", "40": "20:36:57.975", "41": "20:36:57.975", "42": "20:36:57.975", "43": "20:36:57.975", "44": "20:36:57.975", "45": "20:36:57.975", "46": "20:36:57.975", "47": "20:36:57.975", "48": "20:36:57.975", "49": "20:36:57.975", "50": "20:36:57.975", "51": "20:36:57.975", "52": "20:36:57.975", "53": "20:36:57.975", "54": "20:36:57.975", "55": "20:36:57.975", "56": "20:36:57.975", "57": "20:36:57.975", "58": "20:36:57.975", "59": "20:36:57.975", "60": "20:36:57.975", "61": "20:36:57.975", "62": "20:36:57.975", "63": "20:36:57.975", "64": "20:36:57.975", "65": "20:36:57.975", "66": "20:36:57.975", "67": "20:36:57.975", "68": "20:36:57.975", "69": "20:36:57.975", "70": "20:36:57.975", "71": "20:36:57.975", "72": "20:36:57.976", "73": "20:36:57.976", "74": "20:36:57.976", "75": "20:36:58.41", "76": "20:36:58.41"}, "level": {"0": "INFO", "1": "INFO", "2": "INFO", "3": "INFO", "4": "INFO", "5": "INFO", "6": "INFO", "7": "INFO", "8": "INFO", "9": "INFO", "10": "INFO", "11": "INFO", "12": "INFO", "13": "DEBUG", "14": "DEBUG", "15": "INFO", "16": "INFO", "17": "DEBUG", "18": "INFO", "19": "DEBUG", "20": "DEBUG", "21": "DEBUG", "22": "INFO", "23": "DEBUG", "24": "INFO", "25": "DEBUG", "26": "DEBUG", "27": "DEBUG", "28": "DEBUG", "29": "INFO", "30": "DEBUG", "31": "DEBUG", "32": "DEBUG", "33": "DEBUG", "34": "INFO", "35": "DEBUG", "36": "DEBUG", "37": "DEBUG", "38": "DEBUG", "39": "DEBUG", "40": "DEBUG", "41": "DEBUG", "42": "DEBUG", "43": "DEBUG", "44": "DEBUG", "45": "DEBUG", "46": "DEBUG", "47": "DEBUG", "48": "DEBUG", "49": "DEBUG", "50": "DEBUG", "51": "DEBUG", "52": "DEBUG", "53": "DEBUG", "54": "DEBUG", "55": "DEBUG", "56": "DEBUG", "57": "DEBUG", "58": "DEBUG", "59": "DEBUG", "60": "DEBUG", "61": "DEBUG", "62": "DEBUG", "63": "DEBUG", "64": "DEBUG", "65": "DEBUG", "66": "DEBUG", "67": "DEBUG", "68": "DEBUG", "69": "DEBUG", "70": "DEBUG", "71": "INFO", "72": "INFO", "73": "INFO", "74": "INFO", "75": "DEBUG", "76": "DEBUG"}, "stage": {"0": "Workflow", "1": "Validation", "2": "Validation", "3": "Validation", "4": "DataImport", "5": "DataImport", "6": "DataImport", "7": "DataImport", "8": "DataImport", "9": "DataImport", "10": "DataImport", "11": "DataImport", "12": "Workflow", "13": "Workflow", "14": "Workflow", "15": "Workflow", "16": "Workflow", "17": "ModelTraining", "18": "ModelTraining", "19": "ModelTraining", "20": "ModelTraining", "21": "ModelTraining", "22": "ModelTraining", "23": "ModelTraining", "24": "ModelTraining", "25": "ModelTraining", "26": "ModelTraining", "27": "ModelTraining", "28": "ModelTraining", "29": "ModelTraining", "30": "ModelTraining", "31": "ModelTraining", "32": "ModelTraining", "33": "ModelTraining", "34": "ModelTraining", "35": "ModelTraining", "36": "ModelTraining", "37": "ModelTraining", "38": "ModelTraining", "39": "ModelTraining", "40": "ModelTraining", "41": "ModelTraining", "42": "ModelTraining", "43": "ModelTraining", "44": "ModelTraining", "45": "ModelTraining", "46": "ModelTraining", "47": "ModelTraining", "48": "ModelTraining", "49": "ModelTraining", "50": "ModelTraining", "51": "ModelTraining", "52": "ModelTraining", "53": "ModelTraining", "54": "ModelTraining", "55": "ModelTraining", "56": "ModelTraining", "57": "ModelTraining", "58": "ModelTraining", "59": "ModelTraining", "60": "ModelTraining", "61": "ModelTraining", "62": "ModelTraining", "63": "ModelTraining", "64": "ModelTraining", "65": "ModelTraining", "66": "ModelTraining", "67": "ModelTraining", "68": "ModelTraining", "69": "ModelTraining", "70": "ModelTraining", "71": "Workflow", "72": "Workflow", "73": "Workflow", "74": "Workflow", "75": "Workflow", "76": "Workflow"}, "message": {"0": "Project: classification_test_2022-12-20T23.36.45", "1": "Blending will be used.", "2": "Setting stopping tolerance adaptively based on the training frame: 0.010584529526266352", "3": "Build control seed: -1 (random)", "4": "Since cross-validation is disabled, and validation, blending frame(s) were not provided, automatically split the training data into training, validation, blending frame(s) in the ratio 70/10/20.", "5": "training frame: Frame key: AutoML_5_20221220_203647_training_Key_Frame__upload_a0551436917fc398893d0a694ee146b3.hex    cols: 97    rows: 6253  chunks: 3    size: 4830049  checksum: -4024563807740186710", "6": "validation frame: Frame key: AutoML_5_20221220_203647_validation_Key_Frame__upload_a0551436917fc398893d0a694ee146b3.hex    cols: 97    rows: 883  chunks: 3    size: 700519  checksum: 6272702121845604101", "7": "leaderboard frame: Frame key: AutoML_5_20221220_203647_validation_Key_Frame__upload_a0551436917fc398893d0a694ee146b3.hex    cols: 97    rows: 883  chunks: 3    size: 700519  checksum: 6272702121845604101", "8": "blending frame: Frame key: AutoML_5_20221220_203647_blending_Key_Frame__upload_a0551436917fc398893d0a694ee146b3.hex    cols: 97    rows: 1790  chunks: 3    size: 1398002  checksum: -5105798942690342261", "9": "response column: target", "10": "fold column: null", "11": "weights column: null", "12": "Loading execution steps: [{XGBoost : [def_2 (1g, 10w), def_1 (2g, 10w), def_3 (3g, 10w), grid_1 (4g, 90w), lr_search (6g, 30w)]}, {GLM : [def_1 (1g, 10w)]}, {DRF : [def_1 (2g, 10w), XRT (3g, 10w)]}, {GBM : [def_5 (1g, 10w), def_2 (2g, 10w), def_3 (2g, 10w), def_4 (2g, 10w), def_1 (3g, 10w), grid_1 (4g, 60w), lr_annealing (6g, 10w)]}, {DeepLearning : [def_1 (3g, 10w), grid_1 (4g, 30w), grid_2 (5g, 30w), grid_3 (5g, 30w)]}, {completion : [resume_best_grids (10g, 60w)]}, {StackedEnsemble : [best_of_family_1 (1g, 5w), best_of_family_2 (2g, 5w), best_of_family_3 (3g, 5w), best_of_family_4 (4g, 5w), best_of_family_5 (5g, 5w), all_2 (2g, 10w), all_3 (3g, 10w), all_4 (4g, 10w), all_5 (5g, 10w), monotonic (6g, 10w), best_of_family_gbm (6g, 10w), all_gbm (7g, 10w), best_of_family_xglm (8g, 10w), all_xglm (8g, 10w), best_of_family (10g, 10w), best_N (10g, 10w)]}]", "13": "Defined work allocations: [Work{def_2, XGBoost, ModelBuild, group=1, weight=10}, Work{def_1, GLM, ModelBuild, group=1, weight=10}, Work{def_5, GBM, ModelBuild, group=1, weight=10}, Work{best_of_family_1, StackedEnsemble, ModelBuild, group=1, weight=5}, Work{def_1, XGBoost, ModelBuild, group=2, weight=10}, Work{def_1, DRF, ModelBuild, group=2, weight=10}, Work{def_2, GBM, ModelBuild, group=2, weight=10}, Work{def_3, GBM, ModelBuild, group=2, weight=10}, Work{def_4, GBM, ModelBuild, group=2, weight=10}, Work{best_of_family_2, StackedEnsemble, ModelBuild, group=2, weight=5}, Work{all_2, StackedEnsemble, ModelBuild, group=2, weight=10}, Work{def_3, XGBoost, ModelBuild, group=3, weight=10}, Work{XRT, DRF, ModelBuild, group=3, weight=10}, Work{def_1, GBM, ModelBuild, group=3, weight=10}, Work{def_1, DeepLearning, ModelBuild, group=3, weight=10}, Work{best_of_family_3, StackedEnsemble, ModelBuild, group=3, weight=5}, Work{all_3, StackedEnsemble, ModelBuild, group=3, weight=10}, Work{grid_1, XGBoost, HyperparamSearch, group=4, weight=90}, Work{grid_1, GBM, HyperparamSearch, group=4, weight=60}, Work{grid_1, DeepLearning, HyperparamSearch, group=4, weight=30}, Work{best_of_family_4, StackedEnsemble, ModelBuild, group=4, weight=5}, Work{all_4, StackedEnsemble, ModelBuild, group=4, weight=10}, Work{grid_2, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{grid_3, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{best_of_family_5, StackedEnsemble, ModelBuild, group=5, weight=5}, Work{all_5, StackedEnsemble, ModelBuild, group=5, weight=10}, Work{lr_search, XGBoost, Selection, group=6, weight=30}, Work{lr_annealing, GBM, Selection, group=6, weight=10}, Work{monotonic, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{best_of_family_gbm, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{all_gbm, StackedEnsemble, ModelBuild, group=7, weight=10}, Work{best_of_family_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{all_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{resume_best_grids, virtual, Dynamic, group=10, weight=60}, Work{best_of_family, StackedEnsemble, ModelBuild, group=10, weight=10}, Work{best_N, StackedEnsemble, ModelBuild, group=10, weight=10}]", "14": "Actual work allocations: [Work{def_2, XGBoost, ModelBuild, group=1, weight=10}, Work{def_1, GLM, ModelBuild, group=1, weight=10}, Work{def_5, GBM, ModelBuild, group=1, weight=10}, Work{best_of_family_1, StackedEnsemble, ModelBuild, group=1, weight=5}, Work{def_1, XGBoost, ModelBuild, group=2, weight=10}, Work{def_1, DRF, ModelBuild, group=2, weight=10}, Work{def_2, GBM, ModelBuild, group=2, weight=10}, Work{def_3, GBM, ModelBuild, group=2, weight=10}, Work{def_4, GBM, ModelBuild, group=2, weight=10}, Work{best_of_family_2, StackedEnsemble, ModelBuild, group=2, weight=5}, Work{all_2, StackedEnsemble, ModelBuild, group=2, weight=10}, Work{def_3, XGBoost, ModelBuild, group=3, weight=10}, Work{XRT, DRF, ModelBuild, group=3, weight=10}, Work{def_1, GBM, ModelBuild, group=3, weight=10}, Work{def_1, DeepLearning, ModelBuild, group=3, weight=10}, Work{best_of_family_3, StackedEnsemble, ModelBuild, group=3, weight=5}, Work{all_3, StackedEnsemble, ModelBuild, group=3, weight=10}, Work{grid_1, XGBoost, HyperparamSearch, group=4, weight=90}, Work{grid_1, GBM, HyperparamSearch, group=4, weight=60}, Work{grid_1, DeepLearning, HyperparamSearch, group=4, weight=30}, Work{best_of_family_4, StackedEnsemble, ModelBuild, group=4, weight=5}, Work{all_4, StackedEnsemble, ModelBuild, group=4, weight=10}, Work{grid_2, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{grid_3, DeepLearning, HyperparamSearch, group=5, weight=30}, Work{best_of_family_5, StackedEnsemble, ModelBuild, group=5, weight=5}, Work{all_5, StackedEnsemble, ModelBuild, group=5, weight=10}, Work{lr_search, XGBoost, Selection, group=6, weight=30}, Work{lr_annealing, GBM, Selection, group=6, weight=10}, Work{monotonic, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{best_of_family_gbm, StackedEnsemble, ModelBuild, group=6, weight=10}, Work{all_gbm, StackedEnsemble, ModelBuild, group=7, weight=10}, Work{best_of_family_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{all_xglm, StackedEnsemble, ModelBuild, group=8, weight=10}, Work{resume_best_grids, virtual, Dynamic, group=10, weight=60}, Work{best_of_family, StackedEnsemble, ModelBuild, group=10, weight=10}, Work{best_N, StackedEnsemble, ModelBuild, group=10, weight=10}]", "15": "AutoML job created: 2022.12.20 20:36:47.39", "16": "AutoML build started: 2022.12.20 20:36:47.126", "17": "Time assigned for XGBoost_1_AutoML_5_20221220_203647: 2.856285888671875s", "18": "AutoML: starting XGBoost_1_AutoML_5_20221220_203647 model training", "19": "XGBoost_1_AutoML_5_20221220_203647 [XGBoost def_2] started", "20": "XGBoost_1_AutoML_5_20221220_203647 [XGBoost def_2] complete", "21": "Adding model XGBoost_1_AutoML_5_20221220_203647 to leaderboard Leaderboard_classification_test_2022-12-20T23.36.45@@target. Training time: model=3s, total=3s", "22": "New leader: XGBoost_1_AutoML_5_20221220_203647, mean_per_class_error: 0.43083841400527234", "23": "Time assigned for GLM_1_AutoML_5_20221220_203647: 2.574400146484375s", "24": "AutoML: starting GLM_1_AutoML_5_20221220_203647 model training", "25": "GLM_1_AutoML_5_20221220_203647 [GLM def_1] started", "26": "GLM_1_AutoML_5_20221220_203647 [GLM def_1] complete", "27": "Adding model GLM_1_AutoML_5_20221220_203647 to leaderboard Leaderboard_classification_test_2022-12-20T23.36.45@@target. Training time: model=3s, total=3s", "28": "Time assigned for GBM_1_AutoML_5_20221220_203647: 2.326666748046875s", "29": "AutoML: starting GBM_1_AutoML_5_20221220_203647 model training", "30": "GBM_1_AutoML_5_20221220_203647 [GBM def_5] started", "31": "GBM_1_AutoML_5_20221220_203647 [GBM def_5] complete", "32": "Adding model GBM_1_AutoML_5_20221220_203647 to leaderboard Leaderboard_classification_test_2022-12-20T23.36.45@@target. Training time: model=3s, total=3s", "33": "Time assigned for StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647: 0.84s", "34": "AutoML: starting StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647 model training", "35": "StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647 [StackedEnsemble best_of_family_1 (built with AUTO metalearner, using top model from each algorithm type)] started", "36": "AutoML: out of time; skipping StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647 [StackedEnsemble best_of_family_1 (built with AUTO metalearner, using top model from each algorithm type)]", "37": "StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647 [StackedEnsemble best_of_family_1 (built with AUTO metalearner, using top model from each algorithm type)] complete", "38": "Adding model StackedEnsemble_BestOfFamily_1_AutoML_5_20221220_203647 to leaderboard Leaderboard_classification_test_2022-12-20T23.36.45@@target. Training time: model=1s, total=1s", "39": "AutoML: out of time; skipping XGBoost def_1", "40": "AutoML: out of time; skipping DRF def_1", "41": "AutoML: out of time; skipping GBM def_2", "42": "AutoML: out of time; skipping GBM def_3", "43": "AutoML: out of time; skipping GBM def_4", "44": "AutoML: out of time; skipping StackedEnsemble best_of_family_2 (built with AUTO metalearner, using top model from each algorithm type)", "45": "AutoML: out of time; skipping StackedEnsemble all_2 (built with AUTO metalearner, using all AutoML models)", "46": "AutoML: out of time; skipping XGBoost def_3", "47": "AutoML: out of time; skipping DRF XRT (Extremely Randomized Trees)", "48": "AutoML: out of time; skipping GBM def_1", "49": "AutoML: out of time; skipping DeepLearning def_1", "50": "AutoML: out of time; skipping StackedEnsemble best_of_family_3 (built with AUTO metalearner, using top model from each algorithm type)", "51": "AutoML: out of time; skipping StackedEnsemble all_3 (built with AUTO metalearner, using all AutoML models)", "52": "AutoML: out of time; skipping XGBoost grid_1", "53": "AutoML: out of time; skipping GBM grid_1", "54": "AutoML: out of time; skipping DeepLearning grid_1", "55": "AutoML: out of time; skipping StackedEnsemble best_of_family_4 (built with AUTO metalearner, using top model from each algorithm type)", "56": "AutoML: out of time; skipping StackedEnsemble all_4 (built with AUTO metalearner, using all AutoML models)", "57": "AutoML: out of time; skipping DeepLearning grid_2", "58": "AutoML: out of time; skipping DeepLearning grid_3", "59": "AutoML: out of time; skipping StackedEnsemble best_of_family_5 (built with AUTO metalearner, using top model from each algorithm type)", "60": "AutoML: out of time; skipping StackedEnsemble all_5 (built with AUTO metalearner, using all AutoML models)", "61": "AutoML: out of time; skipping XGBoost lr_search", "62": "AutoML: out of time; skipping GBM lr_annealing", "63": "AutoML: out of time; skipping StackedEnsemble monotonic (built with AUTO metalearner, using monotonically constrained AutoML models)", "64": "AutoML: out of time; skipping StackedEnsemble best_of_family_gbm (built with gbm metalearner, using top model from each algorithm type)", "65": "AutoML: out of time; skipping StackedEnsemble all_gbm (built with gbm metalearner, using all AutoML models)", "66": "AutoML: out of time; skipping StackedEnsemble best_of_family_xglm (built with AUTO metalearner, using top model from each algorithm type)", "67": "AutoML: out of time; skipping StackedEnsemble all_xglm (built with AUTO metalearner, using all AutoML models)", "68": "AutoML: out of time; skipping completion resume_best_grids", "69": "AutoML: out of time; skipping StackedEnsemble best_of_family (built with AUTO metalearner, using top model from each algorithm type)", "70": "AutoML: out of time; skipping StackedEnsemble best_N (built with AUTO metalearner, using best 166 non-SE models)", "71": "Actual modeling steps: [{XGBoost : [def_2 (1g, 10w)]}, {GLM : [def_1 (1g, 10w)]}, {GBM : [def_5 (1g, 10w)]}, {StackedEnsemble : [best_of_family_1 (1g, 5w)]}]", "72": "AutoML build stopped: 2022.12.20 20:36:57.975", "73": "AutoML build done: built 3 models", "74": "AutoML duration: 10.849 sec", "75": "Verifying training frame immutability. . .", "76": "Training frame was not mutated (as expected)."}, "name": {"0": NaN, "1": NaN, "2": NaN, "3": NaN, "4": NaN, "5": NaN, "6": NaN, "7": NaN, "8": NaN, "9": NaN, "10": NaN, "11": NaN, "12": NaN, "13": NaN, "14": NaN, "15": "creation_epoch", "16": "start_epoch", "17": NaN, "18": "start_XGBoost_def_2", "19": NaN, "20": NaN, "21": NaN, "22": NaN, "23": NaN, "24": "start_GLM_def_1", "25": NaN, "26": NaN, "27": NaN, "28": NaN, "29": "start_GBM_def_5", "30": NaN, "31": NaN, "32": NaN, "33": NaN, "34": "start_StackedEnsemble_best_of_family_1", "35": NaN, "36": NaN, "37": NaN, "38": NaN, "39": NaN, "40": NaN, "41": NaN, "42": NaN, "43": NaN, "44": NaN, "45": NaN, "46": NaN, "47": NaN, "48": NaN, "49": NaN, "50": NaN, "51": NaN, "52": NaN, "53": NaN, "54": NaN, "55": NaN, "56": NaN, "57": NaN, "58": NaN, "59": NaN, "60": NaN, "61": NaN, "62": NaN, "63": NaN, "64": NaN, "65": NaN, "66": NaN, "67": NaN, "68": NaN, "69": NaN, "70": NaN, "71": NaN, "72": "stop_epoch", "73": NaN, "74": "duration_secs", "75": NaN, "76": NaN}, "value": {"0": NaN, "1": NaN, "2": NaN, "3": NaN, "4": NaN, "5": NaN, "6": NaN, "7": NaN, "8": NaN, "9": NaN, "10": NaN, "11": NaN, "12": NaN, "13": NaN, "14": NaN, "15": 1671568607.0, "16": 1671568607.0, "17": NaN, "18": 1671568607.0, "19": NaN, "20": NaN, "21": NaN, "22": NaN, "23": NaN, "24": 1671568611.0, "25": NaN, "26": NaN, "27": NaN, "28": NaN, "29": 1671568614.0, "30": NaN, "31": NaN, "32": NaN, "33": NaN, "34": 1671568616.0, "35": NaN, "36": NaN, "37": NaN, "38": NaN, "39": NaN, "40": NaN, "41": NaN, "42": NaN, "43": NaN, "44": NaN, "45": NaN, "46": NaN, "47": NaN, "48": NaN, "49": NaN, "50": NaN, "51": NaN, "52": NaN, "53": NaN, "54": NaN, "55": NaN, "56": NaN, "57": NaN, "58": NaN, "59": NaN, "60": NaN, "61": NaN, "62": NaN, "63": NaN, "64": NaN, "65": NaN, "66": NaN, "67": NaN, "68": NaN, "69": NaN, "70": NaN, "71": NaN, "72": 1671568618.0, "73": NaN, "74": 11.0, "75": NaN, "76": NaN}}}]